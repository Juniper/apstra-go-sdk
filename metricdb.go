package goapstra

import (
	"context"
	"fmt"
	"net/http"
	"net/url"
)

const (
	apiUrlMetricdbMetric       = "/api/metricdb/metric"
	apiUrlMetricdbMetricPrefix = apiUrlMetricdbMetric + apiUrlPathDelim
)

// metricdbResponse is generated by GET to apstra's apiUrlMetricdbMetric API endpoint
type metricdbResponse struct {
	Items []metricdbResponseElem `json:"items"`
}

type metricdbResponseElem struct {
	Application string `json:"application"`
	Namespace   string `json:"namespace"`
	Name        string `json:"name"`
}

func (o Client) getMetricdb(ctx context.Context) (*metricdbResponse, error) {
	apstraUrl, err := url.Parse(apiUrlMetricdbMetric)
	if err != nil {
		return nil, fmt.Errorf("error parsing url '%s' - %w", apiUrlVersion, err)
	}
	response := &metricdbResponse{}
	return response, o.talkToApstra(ctx, &talkToApstraIn{
		method:      http.MethodGet,
		url:         apstraUrl,
		apiResponse: response,
	})

}
